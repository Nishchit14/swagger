{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "\u5b8f\u817e\u7ba1\u7406\u5e73\u53f0",
        "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http:\/\/swagger.io](http:\/\/swagger.io) or on [irc.freenode.net, #swagger](http:\/\/swagger.io\/irc\/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
        "termsOfService": "http:\/\/swagger.io\/terms\/"
    },
    "servers": [
        "http:\/\/petstore.swagger.io\/v2"
    ],
    "paths": {
        "\/pet": {
            "post": {
                "summary": "\u65b0\u589epet",
                "description": "",
                "operationId": "AddPet",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "put": {
                "summary": "\u4fee\u6539pet",
                "description": "",
                "operationId": "UpdatePet",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    }
                }
            }
        },
        "\/pet\/findByStatus": {
            "get": {
                "summary": "\u901a\u8fc7status\u67e5\u627epet",
                "description": "Multiple status values can be provided with comma separated strings",
                "operationId": "FindPetsByStatus",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status values that need to be considered for filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application\/xml": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/Pet"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/pet\/findByTags": {
            "get": {
                "summary": "\u901a\u8fc7tags\u67e5\u627epet",
                "description": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                "operationId": "FindPetsByTags",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Tags to filter by"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application\/xml": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/Pet"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/pet\/{petId}": {
            "get": {
                "summary": "\u901a\u8fc7ID\u67e5\u627epet",
                "description": "Returns a single pet",
                "operationId": "GetPetById",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of pet to return"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application\/xml": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/Pet"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "\u66f4\u65b0pet\u7684\u8868\u5355\u6570\u636e",
                "description": "",
                "operationId": "UpdatePetWithForm",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of pet to return"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Updated name of the pet"
                    },
                    {
                        "name": "status",
                        "in": "formData",
                        "description": "Updated status of the pet"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "delete": {
                "summary": "\u5220\u9664pet",
                "description": "",
                "operationId": "DeletePet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of pet to return"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    }
                }
            }
        },
        "\/pet\/{petId}\/uploadImage": {
            "post": {
                "summary": "\u4e0a\u4f20\u56fe\u7247",
                "description": "",
                "operationId": "UploadFile",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of pet to return"
                    },
                    {
                        "name": "additionalMetadata",
                        "in": "formData",
                        "description": "Additional data to pass to server"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "file to upload"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application\/xml": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/Pet"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/store\/inventory": {
            "get": {
                "summary": "\u901a\u8fc7status\u8fd4\u56depet\u5e93\u5b58",
                "description": "Returns a map of status codes to quantities",
                "operationId": "GetInventory",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application\/xml": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/Pet"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/store\/order": {
            "post": {
                "summary": "Place an order for a pet",
                "description": "",
                "operationId": "PlaceOrder",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application\/xml": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/Pet"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/store\/order\/{orderId}": {
            "get": {
                "summary": "Find purchase order by ID",
                "description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                "operationId": "GetOrderById",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of pet that needs to be fetched"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application\/xml": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/Pet"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete purchase order by ID",
                "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                "operationId": "DeleteOrder",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of pet that needs to be fetched"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    }
                }
            }
        },
        "\/user": {
            "post": {
                "summary": "Create user",
                "description": "This can only be done by the logged in user.",
                "operationId": "CreateUser",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/user\/createWithArray": {
            "post": {
                "summary": "Creates list of users with given input array",
                "description": "",
                "operationId": "CreateUsersWithArrayInput",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/user\/createWithList": {
            "post": {
                "summary": "Creates list of users with given input array",
                "description": "",
                "operationId": "CreateUsersWithListInput",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/user\/login": {
            "get": {
                "summary": "Logs user into the system",
                "description": "",
                "operationId": "LoginUser",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The user name for login"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password for login in clear text"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application\/xml": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/Pet"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/user\/logout": {
            "get": {
                "summary": "Logs out current logged in user session",
                "description": "",
                "operationId": "LogoutUser",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/user\/{username}": {
            "get": {
                "summary": "Get user by user name",
                "description": "",
                "operationId": "GetUserByName",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be fetched. Use user1 for testing. "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application\/xml": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/Pet"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Updated user",
                "description": "This can only be done by the logged in user.",
                "operationId": "UpdateUser",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be fetched. Use user1 for testing. "
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    }
                }
            },
            "delete": {
                "summary": "Delete user",
                "description": "This can only be done by the logged in user.",
                "operationId": "DeleteUser",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be fetched. Use user1 for testing. "
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Order": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "petId": {
                        "description": "",
                        "type": "integer"
                    },
                    "quantity": {
                        "description": "",
                        "type": "integer"
                    },
                    "shipDate": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "Order Status",
                        "type": "string"
                    },
                    "complete": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "Category": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "username": {
                        "description": "",
                        "type": "string"
                    },
                    "firstName": {
                        "description": "",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "",
                        "type": "string"
                    },
                    "email": {
                        "description": "",
                        "type": "string"
                    },
                    "password": {
                        "description": "",
                        "type": "string"
                    },
                    "phone": {
                        "description": "",
                        "type": "string"
                    },
                    "userStatus": {
                        "description": "User Status",
                        "type": "integer"
                    }
                }
            },
            "Tag": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Pet": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "Category": {
                        "description": "",
                        "type": "object"
                    },
                    "category": {
                        "description": "",
                        "type": ""
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "photoUrls": {
                        "description": "",
                        "type": "array"
                    },
                    "tags": {
                        "description": "",
                        "type": "array"
                    },
                    "status": {
                        "description": "Order Status",
                        "type": "string"
                    }
                }
            },
            "photoUrls": {
                "type": "array"
            },
            "tags": {
                "type": "array"
            },
            "ApiResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "",
                        "type": "integer"
                    },
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "message": {
                        "description": "",
                        "type": "string"
                    }
                }
            }
        }
    }
}